services:

  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.5.3
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: "zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888"

  zookeeper-2:
    image: confluentinc/cp-zookeeper:7.5.3
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: "zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888"

  zookeeper-3:
    image: confluentinc/cp-zookeeper:7.5.3
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: "zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888"

  kafka-1:
    image: confluentinc/cp-kafka:7.5.3
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9092,INTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://127.0.0.1:9092,INTERNAL://kafka-1:19092
      KAFKA_OPTS: "-javaagent:/etc/kafka/jmx_exporter/jmx_prometheus_javaagent-1.3.0.jar=7071:/etc/kafka/jmx_exporter/kafka-jmx.yml"
    volumes:
      - ./config/jmx-exporter:/etc/kafka/jmx_exporter

  kafka-2:
    image: confluentinc/cp-kafka:7.5.3
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9093,INTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://127.0.0.1:9093,INTERNAL://kafka-2:19092
      KAFKA_OPTS: "-javaagent:/etc/kafka/jmx_exporter/jmx_prometheus_javaagent-1.3.0.jar=7071:/etc/kafka/jmx_exporter/kafka-jmx.yml"
    volumes:
      - ./config/jmx-exporter:/etc/kafka/jmx_exporter

  kafka-3:
    image: confluentinc/cp-kafka:7.5.3
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9094,INTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://127.0.0.1:9094,INTERNAL://kafka-3:19092
      KAFKA_OPTS: "-javaagent:/etc/kafka/jmx_exporter/jmx_prometheus_javaagent-1.3.0.jar=7071:/etc/kafka/jmx_exporter/kafka-jmx.yml"
    volumes:
      - ./config/jmx-exporter:/etc/kafka/jmx_exporter

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.3
    ports:
      - "8091:8081"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-connect:
    build: ./config/kafka-connect/
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8092:8083"
    environment:
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      CONNECT_REST_PORT: 8083
      CONNECT_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      CONNECT_GROUP_ID: "connect-cluster-1"
      CONNECT_REPLICATION_FACTOR: '1'
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_PLUGIN_PATH: "/usr/share/confluent-hub-components"
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: main
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka-1:19092,kafka-2:19092,kafka-3:19092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: kafka-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083

  mysql:
    image: mysql:8.0.33
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: fraud

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    restart: unless-stopped  # WAITING KAFKA BROKER LEADER ELECTITON
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "9308:9308"
    command:
      - --kafka.server=kafka-1:19092
      - --kafka.server=kafka-2:19092
      - --kafka.server=kafka-3:19092
      - --web.listen-address=:9308

  prometheus:
    image: prom/prometheus:latest
    depends_on:
      - kafka-exporter
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.7
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=root

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.7
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      SERVER_HOST: "0.0.0.0"
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: "32characterslongsecretkeyhere123456"
      ELASTICSEARCH_USERNAME: "elastic"
      ELASTICSEARCH_PASSWORD: "YourStrongPassword!"

volumes:
  prometheus_data:
  grafana_data: